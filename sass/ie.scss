/**
 * Partial implementation of cssgrid for IE 11.
 * Makes no attempt to generate the sample layouts for applications.
 */
@import "vars/main";

// NOTE
// This is very much a rough draft.

@mixin ms-2col-preset($left) {
  $l: $left / 10;
  $r: 10 - $l;
  -ms-grid-columns: #{$l}fr #{$r}fr;
}

@mixin ms-3col-preset($first, $second, $third) {
  -ms-grid-columns: #{$first}fr #{$second}fr #{$third}fr;
}

.#{$cg-prefix}-grid {
  display: -ms-grid;
  -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;

  > * {
    -ms-grid-column-span: 12;
  }

  &.#{$cg-prefix}-cols-1,
  &.#{$cg-prefix}-cols-2,
  &.#{$cg-prefix}-cols-3,
  &.#{$cg-prefix}-cols-12 {
    > * {
      -ms-grid-column-span: 1;
    }
  }

  &.#{$cg-prefix}-cols-1 {
    -ms-grid-columns: 1fr;
  }

  &.#{$cg-prefix}-cols-2 {
    -ms-grid-columns: 1fr 1fr;

    // predefined layouts
    @each $lcol in 10, 20, 25, 30, 40, 50, 60, 70, 75, 80, 90 {
      $rcol: 100 - $lcol;
      &.#{$cg-prefix}-split-#{$lcol}-#{$rcol} {
        @include ms-2col-preset($lcol);
      }
    }
  }

  &.#{$cg-prefix}-cols-3 {
    -ms-grid-columns: 1fr 1fr 1fr;

    .#{$cg-prefix}-split-10-80-10 {
      @include ms-3col-preset(1, 8, 1);
    }

    .#{$cg-prefix}-split-15-70-15 {
      @include ms-3col-preset(15, 70, 15);
    }

    .#{$cg-prefix}-split-20-60-20 {
      @include ms-3col-preset(1, 3, 1);
    }

    .#{$cg-prefix}-split-25-50-25 {
      @include ms-3col-preset(1, 2, 1);
    }

    .#{$cg-prefix}-split-25-25-50 {
      @include ms-3col-preset(1, 1, 2);
    }

    .#{$cg-prefix}-split-50-25-25 {
      @include ms-3col-preset(2, 1, 1);
    }
  }

  &.#{$cg-prefix}-cols-12 {
    > * {
      -ms-grid-column-span: 1;
    }
  }

  @for $i from 1 through 12 {
    > .#{$cg-prefix}-col-#{$i} {
      -ms-grid-column-span: #{$i};
    }
  }

  &.#{$cg-prefix}-gap-s {
    -ms-grid-gap: $cg-gap-s;
  }

  &.#{$cg-prefix}-gap-m {
    -ms-grid-gap: $cg-gap-m;
  }

  &.#{$cg-prefix}-gap-l {
    -ms-grid-gap: $cg-gap-l;
  }
}
